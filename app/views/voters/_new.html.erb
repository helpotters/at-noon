<div class="column is-3">
    <%= form_with model: @voter do |f| %>
        <div class="field">
            <div class="control">
                <%= f.label :name, class: "label" %>
                <%= f.text_field :name, class:"input is-small", autofocus: true %>
                <%= f.hidden_field :event_id, value: @event.id %>
            </div>
        </div>
        <div class="modal container is-fluid" id="calendar">
            <div class="modal-background" style="background-color: rgba(0, 24, 31,.90);">
            </div>
            <div class="modal-card container is-fluid">
                <header class="modal-card-head">
                    <h1 class="modal-card-title">
                        <%= @event.title %>
                    </h1>
                    <h2 class="subtitle">
                        <%= @event.description %>
                    </h2>
                </header>
                <div class="modal-card-body container is-fluid">
                    <div class="columns is-centered">
                        <%= f.fields_for "votes_attributes[]", Vote.new  do |vote_form|  %>
                            <%= calendar(events: @event.days, number_of_days: @event.days.count) do |date| %>
                                <%= vote_form.check_box :_destroy, value: 1, checked: "checked", type: "button", onclick: "this.value=0; this.classList.add('is-danger');this.parentNode.classList.add('is-danger);", class: "button is-primary" %>
                                <%= vote_form.hidden_field :day, value: date %>
                                <%= vote_form.hidden_field :voter_id %>
                                <%= date %>
                            <% end %>
                        <% end %>
                    </div>
                </div>
                <footer class="modal-card-foot">
                    <%= f.submit "Submit", class: "button is-info" %>
                    <button class="modal-close" type="button"></button>
                </footer>
            </div>
        </div>
        <button class="button is-primary js-modal-trigger" data-target="calendar" type="button">
            Open Calendar
        </button>
    <% end %>
</div>
    </br>
    <script type="text/javascript">
     document.addEventListener('DOMContentLoaded', () => {
         // Functions to open and close a modal
         function openModal($el) {
             $el.classList.add('is-active');
         }

         function closeModal($el) {
             $el.classList.remove('is-active');
         }

         function closeAllModals() {
             (document.querySelectorAll('.modal') || []).forEach(($modal) => {
                 closeModal($modal);
             });
         }

         // Add a click event on buttons to open a specific modal
         (document.querySelectorAll('.js-modal-trigger') || []).forEach(($trigger) => {
             const modal = $trigger.dataset.target;
             const $target = document.getElementById(modal);
             console.log($target);

             $trigger.addEventListener('click', () => {
                 openModal($target);
             });
         });

         // Add a click event on various child elements to close the parent modal
         (document.querySelectorAll('.modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button') || []).forEach(($close) => {
             const $target = $close.closest('.modal');

             $close.addEventListener('click', () => {
                 closeModal($target);
             });
         });
         let toggles = document.querySelectorAll('.toggle');
         toggles.forEach( toggle => {
             toggle.addEventListener('click', () => toggleRSVP())
         } )

         // Add a keyboard event to close all modals
         document.addEventListener('keydown', (event) => {
             const e = event || window.event;

             if (e.keyCode === 27) { // Escape key
                 closeAllModals();
             }
         });
     });
    </script>
